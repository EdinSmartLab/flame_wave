=== Please note that the line number reported by addr2line may not be accurate.
    If necessary, one can use 'readelf -wl my_exefile | grep my_line_address'
    to find out the offset for that line.

 0: ./Castro2d.Linux.g++.gfortran.MPI.ex() [0x49bfee]
    BLBackTrace::print_backtrace_info(_IO_FILE*)
    /home/ltrnolan/BoxLib/Src/C_BaseLib/BLBackTrace.cpp:81

 1: ./Castro2d.Linux.g++.gfortran.MPI.ex() [0x49c9b6]
    BLBackTrace::handler(int)
    /home/ltrnolan/BoxLib/Src/C_BaseLib/BLBackTrace.cpp:44

 2: ./Castro2d.Linux.g++.gfortran.MPI.ex() [0x77efec]
    ca_hypfill
    /home/ltrnolan/flame_wave/f/2d.Linux.g++.gfortran.MPI/bc_fill_2d.f90:158

 3: ./Castro2d.Linux.g++.gfortran.MPI.ex() [0x4d2183]
    StateDescriptor::BndryFunc::operator()(double*, int const*, int const*, int const*, int const*, double const*, double const*, double const*, int const*, int) const
    /home/ltrnolan/BoxLib/Src/C_AMRLib/StateDescriptor.cpp:127

 4: ./Castro2d.Linux.g++.gfortran.MPI.ex() [0x4d0e8b]
    StateData::FillBoundary(FArrayBox&, double, double const*, RealBox const&, int, int, int)
    /home/ltrnolan/BoxLib/Src/C_AMRLib/StateData.cpp:476

 5: ./Castro2d.Linux.g++.gfortran.MPI.ex() [0x4b3134]
    AmrLevel::setPhysBoundaryValues(FArrayBox&, int, double, int, int, int)
    /home/ltrnolan/BoxLib/Src/C_AMRLib/AmrLevel.cpp:487

 6: ./Castro2d.Linux.g++.gfortran.MPI.ex() [0x4b747c]
    FillPatchIteratorHelper::fill(FArrayBox&, int, int)
    /home/ltrnolan/BoxLib/Src/C_AMRLib/AmrLevel.cpp:1222

 7: ./Castro2d.Linux.g++.gfortran.MPI.ex() [0x4b9894]
    MFIter::operator++()
    /home/ltrnolan/BoxLib/Src/C_BaseLib/FabArray.H:598
    FillPatchIterator::Initialize(int, double, int, int, int)
    /home/ltrnolan/BoxLib/Src/C_AMRLib/AmrLevel.cpp:857

 8: ./Castro2d.Linux.g++.gfortran.MPI.ex() [0x4b9a00]
    FillPatchIterator::FillPatchIterator(AmrLevel&, MultiFab&, int, double, int, int, int)
    /home/ltrnolan/BoxLib/Src/C_AMRLib/AmrLevel.cpp:546

 9: ./Castro2d.Linux.g++.gfortran.MPI.ex() [0x4b9b28]
    AmrLevel::FillPatch(AmrLevel&, MultiFab&, int, double, int, int, int, int)
    /home/ltrnolan/BoxLib/Src/C_AMRLib/AmrLevel.cpp:1804

10: ./Castro2d.Linux.g++.gfortran.MPI.ex() [0x4fb941]
    Castro::advance_hydro(double, double, int, int, int)
    /home/ltrnolan/BoxLib/Src/C_BaseLib/MultiFab.H:91

11: ./Castro2d.Linux.g++.gfortran.MPI.ex() [0x501f95]
    Castro::advance(double, double, int, int)
    /home/ltrnolan/Castro/Source/Castro_advance.cpp:125

12: ./Castro2d.Linux.g++.gfortran.MPI.ex() [0x4a5f32]
    std::vector<double, std::allocator<double> >::operator[](unsigned long)
    /usr/include/c++/4.8.2/bits/stl_vector.h:771
    Array<double>::operator[](unsigned long)
    /home/ltrnolan/BoxLib/Src/C_BaseLib/Array.H:89
    Amr::timeStep(int, double, int, int, double)
    /home/ltrnolan/BoxLib/Src/C_AMRLib/Amr.cpp:1948

13: ./Castro2d.Linux.g++.gfortran.MPI.ex() [0x4a403b]
    Amr::coarseTimeStep(double)
    /home/ltrnolan/BoxLib/Src/C_AMRLib/Amr.cpp:2045

14: ./Castro2d.Linux.g++.gfortran.MPI.ex() [0x40b190]
    main
    /home/ltrnolan/Castro/Source/main.cpp:136 (discriminator 1)

15: /lib64/libc.so.6(__libc_start_main+0xf5) [0x7fa0f7314b15]
    ??
    ??:0

16: ./Castro2d.Linux.g++.gfortran.MPI.ex() [0x40c4d5]
    _start
    ??:?

